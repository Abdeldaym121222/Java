//Array
   Once an array is created, its size is fixed. An array reference variable is used to
   access the elements in an array using an index.


	float f[] = {2.3, 4.5, 6.6}; // error
	float f[] = {2.3f, 4.5f, 6.6f}; // true
        // declare Array & assignment values
        double[] myList = new double[10];
        myList[0] = 5.6;
        myList[1] = 4.5;
        myList[2] = 3.3;
        myList[3] = 13.2;
        myList[4] = 4.0;
        myList[5] = 34.33;
        myList[6] = 34.0;
        myList[7] = 45.45;
        myList[8] = 99.993;
        myList[9] = 11123;
        
        // declare and print array
        char[] city = {'D', 'a', 'l', 'l', 'a', 's'};
        System.out.println(city);  // Dallas
        System.out.println(city[0]);  // D
        
        
        // get value of array from user
        int myList1[] = new int[10];
        for (int i = 0; i < myList.length; i++) {
        myList1[i] =(int)( Math.random() * 100);
        }
        
        // print values of array
        for (int i = 0; i < myList.length; i++) {
        System.out.println(myList1[i]);
        }

	// max value in array
	double max = myList[0];
	int indexOfMax = 0;
	for (int i = 1; i < myList.length; i++) {
		if (myList[i] > max) {
		max = myList[i];
		indexOfMax = i;
		}
	}

----------------------------------------------------------------------------
/*   You can use the equals method to check whether two arrays are strictly equal. Two arrays
are strictly equal if their corresponding elements are the same. In the following code, list1
and list2 are equal, but list2 and list3 are not.*/
 
int[] list1 = {2, 4, 7, 10};
int[] list2 = {2, 4, 7, 10};
int[] list3 = {4, 2, 7, 10};
System.out.println(java.util.Arrays.equals(list1, list2)); // true
System.out.println(java.util.Arrays.equals(list2, list3)); // false
   